import random

def get_joke(category):
    jokes = {
        "айтишную": [
            "Почему программисты путают Хэллоуин и Рождество? Потому что OCT 31 == DEC 25!",
            "Программисты не тонут — они просто уходят в бесконечный цикл!",
            "Почему программист всегда мокрый? Потому что он постоянно в бассейне (pool)!",
            "Сколько программистов нужно, чтобы вкрутить лампочку? Ни одного, это hardware проблема!",
            "Почему Python-разработчики живут дольше? Потому что они используют 'from __future__ import longevity'!",
            "Что сказал null, встретив undefined? 'Ты хоть существую?'"
        ],
        "короткую": [
            "Бит — это не только боль, но и счастье.",
            "Лучше один коммит, чем сто обещаний.",
            "Жизнь — это как семантика: важен не синтаксис, а смысл.",
            "Лучше переполнить стек, чем недолюбить.",
            "Коммить чаще — живи дольше!",
            "Баг — это не ошибка, а фича с сюрпризом."
        ],
        "умную": [
            "Если кажется, что всё работает — ты просто плохо проверил.",
            "Ошибка — это просто способ Вселенной сказать: 'Попробуй иначе'.",
            "Если дерево упадет в лесу, а его parse-дерево будет валидным — это всё равно синтаксическая ошибка в реальности.",
            "Квантовый компьютер — это когда твой код одновременно и работает, и не работает.",
            "Лучше иметь детерминированный баг, чем недетерминированное решение.",
            "Рекурсия в жизни: чтобы понять рекурсию, нужно сначала понять рекурсию."
        ],
    }
    return random.choice(jokes.get(category, ["Не знаю таких шуток, но ты молодец, что спросил!"]))

def main():
    print("Привет! Я Шуткобот!")
    ready = input("Хочешь шутку? (да/нет): ").strip().lower()
    
    if ready != "да":
        print("Ну и ладно, приходи, когда будет скучно!")
        return
    
    category = input("Какую? (айтишную/короткую/умную): ").strip().lower()
    print("\nШутка дня:")
    print(get_joke(category))

if __name__ == "__main__":
    main()
